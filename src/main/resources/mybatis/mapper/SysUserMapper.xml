<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="mybatis.dataObject.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="mybatis.dataObject.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo" />
    <result column="head_img" jdbcType="LONGVARBINARY" property="headImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_name, user_password, user_email, create_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    user_info, head_img
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="mybatis.dataObject.SysUserExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="mybatis.dataObject.SysUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="mybatis.dataObject.SysUserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatis.dataObject.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user (id, user_name, user_password, 
      user_email, create_time, user_info, 
      head_img)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userInfo,jdbcType=LONGVARCHAR}, 
      #{headImg,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="mybatis.dataObject.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userInfo != null">
        user_info,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userInfo != null">
        #{userInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatis.dataObject.SysUserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userInfo != null">
        user_info = #{record.userInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.headImg != null">
        head_img = #{record.headImg,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_info = #{record.userInfo,jdbcType=LONGVARCHAR},
      head_img = #{record.headImg,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mybatis.dataObject.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userInfo != null">
        user_info = #{userInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="mybatis.dataObject.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_info = #{userInfo,jdbcType=LONGVARCHAR},
      head_img = #{headImg,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="mybatis.dataObject.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 关联 嵌套结果映射结果集 -->
  <!-- 别名映射=属性映射:role.XXX -->
  <!-- 取别名，映射到resultType的实体类对应的属性中，属性是（SysRole）role对象，查询出的列名则映射到对应的role.XXX属性 -->
  <select id="selectUserAndRoleById" resultType="mybatis.dataObject.SysUser">
  	select 
  		u.id,
  		u.user_name userName,
  		u.user_password userPassword,
  		u.user_email userEmail,
  		u.user_info userInfo,
  		u.head_img headImg,
  		u.create_time createTime,
  		r.id "role.id",
  		r.role_name "role.roleName",
  		r.enabled "role.enabled",
  		r.create_by "role.createBy",
  		r.create_time "role.createTime"
	from sys_user u 
	inner join sys_user_role ur on u.id=ur.user_id
	inner join sys_role r on ur.role_id =r.id
	where u.id= #{id}
  </select>
  
  <!-- 重新配置映射结果集 -->
  <!-- 自动映射处理：属性role的property="role.XXX"，column取别名(id——role_id) -->
  <!-- sql列名的别名对应column的值 -->
  <resultMap id="userRoleMap" type="mybatis.dataObject.SysUser">
	<id property="id" column="id" />
	<result property="userName" column="user_name"/>
	<result property="userPassword"  column="user_password"/>
	<result property="userEmail" column="user_email"/>
	<result property="userInfo" column="user_info"/>
	<result property="headImg" column="head_img" jdbcType="BLOB"/>
	<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    
    <!-- role属性 -->
   	<result property="role.id" column="role_id"/>
	<result property="role.roleName"  column="role_name"/>
	<result property="role.enabled" column="role_enabled"/>
	<result property="role.createBy" column="role_create_by"/>
	<result property="role.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>
  </resultMap>
  
  <select id="selectUserAndRoleById2" resultMap="userRoleMap">
  	select 
  		u.id,
  		u.user_name,
  		u.user_password,
  		u.user_email,
  		u.user_info,
  		u.head_img,
  		u.create_time,
  		r.id role_id,
  		r.role_name,
  		r.enabled role_enabled,
  		r.create_by role_create_by,
  		r.create_time role_create_time
	from sys_user u 
	inner join sys_user_role ur on u.id=ur.user_id
	inner join sys_role r on ur.role_id =r.id
	where u.id= #{id}
  </select>
  
  <!-- 映射结果 继承 -->
  <!-- 相比上面的方法，减少工作量，自动生成策略会生成基本映射 -->
  <resultMap id="userRoleMapExtend" extends="BaseResultMap" type="mybatis.dataObject.SysUser">
	<result property="role.id" column="role_id"/>
	<result property="role.roleName"  column="role_name"/>
	<result property="role.enabled" column="role_enabled"/>
	<result property="role.createBy" column="role_create_by"/>
	<result property="role.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>
  </resultMap>
  <select id="selectUserAndRoleByIdExtend" resultMap="userRoleMapExtend">
  	select 
  		u.id,
  		u.user_name userName,
  		u.user_password userPassword,
  		u.user_email userEmail,
  		u.user_info userInfo,
  		u.head_img headImg,
  		u.create_time createTime,
  		r.id role_id,
  		r.role_name role_name,
  		r.enabled role_enabled,
  		r.create_by role_create_by,
  		r.create_time role_create_time
	from sys_user u 
	inner join sys_user_role ur on u.id=ur.user_id
	inner join sys_role r on ur.role_id =r.id
	where u.id= #{id}
  </select>
  
  <!-- association标签用于和一个复杂的类型进行关联，即用于一对一的关联配置 -->
  <!-- 属性：关联（SysRole）role对象，property直接是role对象的属性，不加role.，查询列名colunm不加role_-->
  <!-- columnPrefix属性会为sql自动配置前缀 -->
  <resultMap id="userRoleMapAssociation" extends="BaseResultMap" type="mybatis.dataObject.SysUser">
	<association property="role" columnPrefix="role_" javaType="mybatis.dataObject.SysRole">
		<result property="id" column="id"/>
		<result property="roleName"  column="role_name"/>
		<result property="enabled" column="enabled"/>
		<result property="createBy" column="create_by"/>
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
	</association>
  </resultMap> 
  <select id="selectUserAndRoleByIdAssociation" resultMap="userRoleMapAssociation">
  	select 
  		u.id,
  		u.user_name,
  		u.user_password,
  		u.user_email,
  		u.user_info,
  		u.head_img,
  		u.create_time create_time,
  		r.id role_id,
  		r.role_name role_role_name,
  		r.enabled role_enabled,
  		r.create_by role_create_by,
  		r.create_time role_create_time
	from sys_user u 
	inner join sys_user_role ur on u.id=ur.user_id
	inner join sys_role r on ur.role_id =r.id
	where u.id= #{id}
  </select>
</mapper>